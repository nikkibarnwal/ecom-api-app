{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "description": "API for Ecommerce application",
    "title": "Ecommerce API"
  },
  "servers": [
    {
      "url": "http://localhost:3100"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Signup",
        "description": "For users to register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": ["name", "email", "password", "type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signup"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },

    "/api/users/signin": {
      "post": {
        "tags": ["Users"],
        "summary": "Login",
        "description": "User login to get token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "default": "seller@ecom.com"
                  },
                  "password": {
                    "type": "string",
                    "default": "Password1"
                  }
                },
                "required": ["email", "password"]
              }
            },
            "examples": {
              "user": {
                "summary": "Sample request",
                "value": {
                  "email": "user@example.com",
                  "password": "userpassword"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Wrong Credentials"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get Products",
        "description": "User will get all products",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unautorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create Product",
        "description": "Create a new product",
        "security": [{ "JWT": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "quantity": {
                    "type": "integer"
                  }
                },
                "required": ["name", "image", "price", "quantity"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get One Products",
        "description": "User will get single product",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unautorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/products/rate": {
      "post": {
        "tags": ["Products"],
        "summary": "Rate a product",
        "description": "User will rate a product",
        "security": [{ "JWT": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer"
                  },
                  "rating": {
                    "type": "integer"
                  }
                },
                "required": ["productId", "rating"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rating has been done"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/products/filter": {
      "get": {
        "tags": ["Products"],
        "summary": "Filter Products",
        "description": "Filter products based on query parameters",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Category of the product"
          },
          {
            "name": "minPrice",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "Minimum price of the product"
          },
          {
            "name": "maxPrice",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "Maximum price of the product"
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered products retrieved successfully"
          },
          "400": {
            "description": "Invalid query parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/cart": {
      "post": {
        "tags": ["Cart"],
        "summary": "Add product in the cart",
        "description": "User will add product to cart",
        "security": [{ "JWT": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer"
                  },
                  "quantity": {
                    "type": "integer"
                  }
                },
                "required": ["productId", "quantity"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cart is updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "get": {
        "tags": ["Cart"],
        "summary": "Cart Items",
        "description": "User will get all cart items products",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unautorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/cart/clear": {
      "get": {
        "tags": ["Cart"],
        "summary": "Clear cart items",
        "description": "User will clear cart items",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unautorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/cart/{id}": {
      "delete": {
        "tags": ["Cart"],
        "summary": "Remove an item from cart",
        "description": "User will remove an item from cart",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unautorized"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    }
  }
}
